{"version":3,"file":"read-excel-file.min.js","sources":["../modules/xml/xmlBrowser.js","../node_modules/fflate/esm/browser.js","../modules/read/unpackXlsxFileBrowser.js","../modules/xml/dom.js","../modules/xml/xlsx.js","../modules/read/parseProperties.js","../modules/read/parseFilePaths.js","../modules/read/parseStyles.js","../modules/read/parseDate.js","../modules/read/isDateTimestamp.js","../modules/read/parseCellValue.js","../modules/read/coordinates.js","../modules/read/parseCell.js","../modules/read/parseCells.js","../modules/read/parseDimensions.js","../modules/read/dropEmptyRows.js","../modules/read/dropEmptyColumns.js","../modules/read/getData.js","../modules/read/readXlsx.js","../modules/read/parseSharedStrings.js","../modules/read/parseSheet.js","../modules/types/InvalidError.js","../modules/types/Number.js","../modules/types/String.js","../modules/types/Boolean.js","../modules/read/schema/convertToJson.js","../modules/types/Date.js","../modules/read/schema/convertToJson.legacy.js","../modules/read/schema/convertToJson.spreadsheet.js","../modules/read/schema/convertMapToSchema.js","../modules/read/readXlsxFileContents.js","../modules/read/readXlsxFileBrowser.js"],"sourcesContent":["export default {\n  createDocument: function createDocument(content) {\n    // if (!content) {\n    // \tthrow new Error('No *.xml content')\n    // }\n    // A weird bug: it won't parse XML unless it's trimmed.\n    // https://github.com/catamphetamine/read-excel-file/issues/21\n    return new DOMParser().parseFromString(content.trim(), 'text/xml');\n  }\n};\n//# sourceMappingURL=xmlBrowser.js.map","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos >> 3] = lst;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if (d[1] & 32)\n        err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                err(6, 'invalid gzip data');\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            err(8);\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, new u8(su)));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","import { unzipSync, strFromU8 } from 'fflate';\n\n/**\r\n * Reads XLSX file in a browser.\r\n * @param  {(File|Blob|ArrayBuffer)} input - A `File` or an `ArrayBuffer`.\r\n * @return {Promise} Resolves to an object holding XLSX file entries.\r\n */\nexport default function unpackXlsxFile(input) {\n  if (input instanceof File) {\n    return input.arrayBuffer().then(unpackXlsxArrayBuffer);\n  }\n  if (input instanceof Blob) {\n    return input.arrayBuffer().then(unpackXlsxArrayBuffer);\n  }\n  return unpackXlsxArrayBuffer(input);\n}\n\n/**\r\n * Reads XLSX file in a browser from an `ArrayBuffer`.\r\n * @param  {ArrayBuffer} input\r\n * @return {Promise} Resolves to an object holding XLSX file entries.\r\n */\nfunction unpackXlsxArrayBuffer(arrayBuffer) {\n  var archive = new Uint8Array(arrayBuffer);\n  var contents = unzipSync(archive);\n  return Promise.resolve(getContents(contents));\n  // return new Promise((resolve, reject) => {\n  // \tunzip(archive, (error, contents) => {\n  // \t\tif (error) {\n  // \t\t\treturn reject(error)\n  // \t\t}\n  // \t\treturn resolve(getContents(contents))\n  // \t})\n  // })\n}\n\nfunction getContents(contents) {\n  var unzippedFiles = [];\n  for (var _i = 0, _Object$keys = Object.keys(contents); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    unzippedFiles[key] = strFromU8(contents[key]);\n  }\n  return unzippedFiles;\n}\n//# sourceMappingURL=unpackXlsxFileBrowser.js.map","export function findChild(node, tagName) {\n  var i = 0;\n  while (i < node.childNodes.length) {\n    var childNode = node.childNodes[i];\n    // `nodeType: 1` means \"Element\".\n    // https://www.w3schools.com/xml/prop_element_nodetype.asp\n    if (childNode.nodeType === 1 && getTagName(childNode) === tagName) {\n      return childNode;\n    }\n    i++;\n  }\n}\nexport function findChildren(node, tagName) {\n  var results = [];\n  var i = 0;\n  while (i < node.childNodes.length) {\n    var childNode = node.childNodes[i];\n    // `nodeType: 1` means \"Element\".\n    // https://www.w3schools.com/xml/prop_element_nodetype.asp\n    if (childNode.nodeType === 1 && getTagName(childNode) === tagName) {\n      results.push(childNode);\n    }\n    i++;\n  }\n  return results;\n}\nexport function forEach(node, tagName, func) {\n  // if (typeof tagName === 'function') {\n  // \tfunc = tagName\n  // \ttagName = undefined\n  // }\n  var i = 0;\n  while (i < node.childNodes.length) {\n    var childNode = node.childNodes[i];\n    if (tagName) {\n      // `nodeType: 1` means \"Element\".\n      // https://www.w3schools.com/xml/prop_element_nodetype.asp\n      if (childNode.nodeType === 1 && getTagName(childNode) === tagName) {\n        func(childNode, i);\n      }\n    } else {\n      func(childNode, i);\n    }\n    i++;\n  }\n}\nexport function map(node, tagName, func) {\n  var results = [];\n  forEach(node, tagName, function (node, i) {\n    results.push(func(node, i));\n  });\n  return results;\n}\nvar NAMESPACE_REG_EXP = /.+\\:/;\nexport function getTagName(element) {\n  // For some weird reason, if an element is declared as,\n  // for example, `<x:sheets/>`, then its `.tagName` will be\n  // \"x:sheets\" instead of just \"sheets\".\n  // https://gitlab.com/catamphetamine/read-excel-file/-/issues/25\n  // Its not clear how to tell it to ignore any namespaces\n  // when getting `.tagName`, so just replacing anything\n  // before a colon, if any.\n  return element.tagName.replace(NAMESPACE_REG_EXP, '');\n}\n\n// This function is only used for occasional debug messages.\nexport function getOuterXml(node) {\n  // `nodeType: 1` means \"Element\".\n  // https://www.w3schools.com/xml/prop_element_nodetype.asp\n  if (node.nodeType !== 1) {\n    return node.textContent;\n  }\n  var xml = '<' + getTagName(node);\n  var j = 0;\n  while (j < node.attributes.length) {\n    xml += ' ' + node.attributes[j].name + '=' + '\"' + node.attributes[j].value + '\"';\n    j++;\n  }\n  xml += '>';\n  var i = 0;\n  while (i < node.childNodes.length) {\n    xml += getOuterXml(node.childNodes[i]);\n    i++;\n  }\n  xml += '</' + getTagName(node) + '>';\n  return xml;\n}\n//# sourceMappingURL=dom.js.map","import { findChild, findChildren, forEach, map, getTagName } from './dom.js';\n\n// Returns an array of cells,\n// each element being an XML DOM element representing a cell.\nexport function getCells(document) {\n  var worksheet = document.documentElement;\n  var sheetData = findChild(worksheet, 'sheetData');\n  var cells = [];\n  forEach(sheetData, 'row', function (row) {\n    forEach(row, 'c', function (cell) {\n      cells.push(cell);\n    });\n  });\n  return cells;\n}\nexport function getMergedCells(document) {\n  var worksheet = document.documentElement;\n  var mergedCells = findChild(worksheet, 'mergeCells');\n  var mergedCellsInfo = [];\n  if (mergedCells) {\n    forEach(mergedCells, 'mergeCell', function (mergedCell) {\n      mergedCellsInfo.push(mergedCell.getAttribute('ref'));\n    });\n  }\n  return mergedCellsInfo;\n}\nexport function getCellValue(document, node) {\n  return findChild(node, 'v');\n}\nexport function getCellInlineStringValue(document, node) {\n  if (node.firstChild && getTagName(node.firstChild) === 'is' && node.firstChild.firstChild && getTagName(node.firstChild.firstChild) === 't') {\n    return node.firstChild.firstChild.textContent;\n  }\n}\nexport function getDimensions(document) {\n  var worksheet = document.documentElement;\n  var dimensions = findChild(worksheet, 'dimension');\n  if (dimensions) {\n    return dimensions.getAttribute('ref');\n  }\n}\nexport function getBaseStyles(document) {\n  var styleSheet = document.documentElement;\n  var cellStyleXfs = findChild(styleSheet, 'cellStyleXfs');\n  if (cellStyleXfs) {\n    return findChildren(cellStyleXfs, 'xf');\n  }\n  return [];\n}\nexport function getCellStyles(document) {\n  var styleSheet = document.documentElement;\n  var cellXfs = findChild(styleSheet, 'cellXfs');\n  if (!cellXfs) {\n    return [];\n  }\n  return findChildren(cellXfs, 'xf');\n}\nexport function getNumberFormats(document) {\n  var styleSheet = document.documentElement;\n  var numberFormats = [];\n  var numFmts = findChild(styleSheet, 'numFmts');\n  if (numFmts) {\n    return findChildren(numFmts, 'numFmt');\n  }\n  return [];\n}\nexport function getSharedStrings(document) {\n  // An `<si/>` element can contain a `<t/>` (simplest case) or a set of `<r/>` (\"rich formatting\") elements having `<t/>`.\n  // https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sharedstringitem?redirectedfrom=MSDN&view=openxml-2.8.1\n  // http://www.datypic.com/sc/ooxml/e-ssml_si-1.html\n\n  var sst = document.documentElement;\n  return map(sst, 'si', function (string) {\n    var t = findChild(string, 't');\n    if (t) {\n      return t.textContent;\n    }\n    var value = '';\n    forEach(string, 'r', function (r) {\n      value += findChild(r, 't').textContent;\n    });\n    return value;\n  });\n}\nexport function getWorkbookProperties(document) {\n  var workbook = document.documentElement;\n  return findChild(workbook, 'workbookPr');\n}\nexport function getRelationships(document) {\n  var relationships = document.documentElement;\n  return findChildren(relationships, 'Relationship');\n}\nexport function getSheets(document) {\n  var workbook = document.documentElement;\n  var sheets = findChild(workbook, 'sheets');\n  return findChildren(sheets, 'sheet');\n}\n//# sourceMappingURL=xlsx.js.map","import { getWorkbookProperties, getSheets } from '../xml/xlsx.js';\n\n// I guess `xl/workbook.xml` file should always be present inside the *.xlsx archive.\nexport default function parseProperties(content, xml) {\n  var book = xml.createDocument(content);\n  var properties = {};\n\n  // Read `<workbookPr/>` element to detect whether dates are 1900-based or 1904-based.\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\n  // http://webapp.docx4java.org/OnlineDemo/ecma376/SpreadsheetML/workbookPr.html\n\n  var workbookProperties = getWorkbookProperties(book);\n  if (workbookProperties && workbookProperties.getAttribute('date1904') === '1') {\n    properties.epoch1904 = true;\n  }\n\n  // Get sheets info (indexes, names, if they're available).\n  // Example:\n  // <sheets>\n  //   <sheet\n  //     xmlns:ns=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"\n  //     name=\"Sheet1\"\n  //     sheetId=\"1\"\n  //     ns:id=\"rId3\"/>\n  // </sheets>\n  // http://www.datypic.com/sc/ooxml/e-ssml_sheet-1.html\n\n  properties.sheets = [];\n  var addSheetInfo = function addSheetInfo(sheet) {\n    if (sheet.getAttribute('name')) {\n      properties.sheets.push({\n        id: sheet.getAttribute('sheetId'),\n        name: sheet.getAttribute('name'),\n        relationId: sheet.getAttribute('r:id')\n      });\n    }\n  };\n  getSheets(book).forEach(addSheetInfo);\n  return properties;\n}\n//# sourceMappingURL=parseProperties.js.map","import { getRelationships } from '../xml/xlsx.js';\n\n/**\r\n * Returns sheet file paths.\r\n * Seems that the correct place to look for the `sheetId` -> `filename` mapping\r\n * is `xl/_rels/workbook.xml.rels` file.\r\n * https://github.com/tidyverse/readxl/issues/104\r\n * @param  {string} content — `xl/_rels/workbook.xml.rels` file contents.\r\n * @param  {object} xml\r\n * @return {object}\r\n */\nexport default function parseFilePaths(content, xml) {\n  // Example:\n  // <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n  //   ...\n  //   <Relationship\n  //     Id=\"rId3\"\n  //     Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\"\n  //     Target=\"worksheets/sheet1.xml\"/>\n  // </Relationships>\n  var document = xml.createDocument(content);\n  var filePaths = {\n    sheets: {},\n    sharedStrings: undefined,\n    styles: undefined\n  };\n  var addFilePathInfo = function addFilePathInfo(relationship) {\n    var filePath = relationship.getAttribute('Target');\n    var fileType = relationship.getAttribute('Type');\n    switch (fileType) {\n      case 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles':\n        filePaths.styles = getFilePath(filePath);\n        break;\n      case 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings':\n        filePaths.sharedStrings = getFilePath(filePath);\n        break;\n      case 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet':\n        filePaths.sheets[relationship.getAttribute('Id')] = getFilePath(filePath);\n        break;\n    }\n  };\n  getRelationships(document).forEach(addFilePathInfo);\n\n  // Seems like \"sharedStrings.xml\" is not required to exist.\n  // For example, when the spreadsheet doesn't contain any strings.\n  // https://github.com/catamphetamine/read-excel-file/issues/85\n  // if (!filePaths.sharedStrings) {\n  //   throw new Error('\"sharedStrings.xml\" file not found in the *.xlsx file')\n  // }\n\n  return filePaths;\n}\nfunction getFilePath(path) {\n  // Normally, `path` is a relative path inside the ZIP archive,\n  // like \"worksheets/sheet1.xml\", or \"sharedStrings.xml\", or \"styles.xml\".\n  // There has been one weird case when file path was an absolute path,\n  // like \"/xl/worksheets/sheet1.xml\" (specifically for sheets):\n  // https://github.com/catamphetamine/read-excel-file/pull/95\n  // Other libraries (like `xlsx`) and software (like Google Docs)\n  // seem to support such absolute file paths, so this library does too.\n  if (path[0] === '/') {\n    return path.slice('/'.length);\n  }\n  // // Seems like a path could also be a URL.\n  // // http://officeopenxml.com/anatomyofOOXML-xlsx.php\n  // if (/^[a-z]+\\:\\/\\//.test(path)) {\n  //   return path\n  // }\n  return 'xl/' + path;\n}\n//# sourceMappingURL=parseFilePaths.js.map","function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { getBaseStyles, getCellStyles, getNumberFormats } from '../xml/xlsx.js';\n\n// http://officeopenxml.com/SSstyles.php\n// Returns an array of cell styles.\n// A cell style index is its ID.\nexport default function parseStyles(content, xml) {\n  if (!content) {\n    return {};\n  }\n\n  // https://social.msdn.microsoft.com/Forums/sqlserver/en-US/708978af-b598-45c4-a598-d3518a5a09f0/howwhen-is-cellstylexfs-vs-cellxfs-applied-to-a-cell?forum=os_binaryfile\n  // https://www.office-forums.com/threads/cellxfs-cellstylexfs.2163519/\n  var doc = xml.createDocument(content);\n  var baseStyles = getBaseStyles(doc).map(parseCellStyle);\n  var numberFormats = getNumberFormats(doc).map(parseNumberFormatStyle).reduce(function (formats, format) {\n    // Format ID is a numeric index.\n    // There're some standard \"built-in\" formats (in Excel) up to about `100`.\n    formats[format.id] = format;\n    return formats;\n  }, []);\n  var getCellStyle = function getCellStyle(xf) {\n    if (xf.hasAttribute('xfId')) {\n      return _objectSpread(_objectSpread({}, baseStyles[xf.xfId]), parseCellStyle(xf, numberFormats));\n    }\n    return parseCellStyle(xf, numberFormats);\n  };\n  return getCellStyles(doc).map(getCellStyle);\n}\nfunction parseNumberFormatStyle(numFmt) {\n  return {\n    id: numFmt.getAttribute('numFmtId'),\n    template: numFmt.getAttribute('formatCode')\n  };\n}\n\n// http://www.datypic.com/sc/ooxml/e-ssml_xf-2.html\nfunction parseCellStyle(xf, numFmts) {\n  var style = {};\n  if (xf.hasAttribute('numFmtId')) {\n    var numberFormatId = xf.getAttribute('numFmtId');\n    // Built-in number formats don't have a `<numFmt/>` element in `styles.xml`.\n    // https://hexdocs.pm/xlsxir/number_styles.html\n    if (numFmts[numberFormatId]) {\n      style.numberFormat = numFmts[numberFormatId];\n    } else {\n      style.numberFormat = {\n        id: numberFormatId\n      };\n    }\n  }\n  return style;\n}\n//# sourceMappingURL=parseStyles.js.map","// Parses an Excel Date (\"serial\") into a corresponding javascript Date in UTC+0 timezone.\n// (with time equal to 00:00)\n//\n// https://www.pcworld.com/article/3063622/software/mastering-excel-date-time-serial-numbers-networkdays-datevalue-and-more.html\n// \"If you need to calculate dates in your spreadsheets,\n//  Excel uses its own unique system, which it calls Serial Numbers\".\n//\nexport default function parseExcelDate(excelSerialDate, options) {\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\n  if (options && options.epoch1904) {\n    excelSerialDate += 1462;\n  }\n\n  // \"Excel serial date\" is just\n  // the count of days since `01/01/1900`\n  // (seems that it may be even fractional).\n  //\n  // The count of days elapsed\n  // since `01/01/1900` (Excel epoch)\n  // till `01/01/1970` (Unix epoch).\n  // Accounts for leap years\n  // (19 of them, yielding 19 extra days).\n  var daysBeforeUnixEpoch = 70 * 365 + 19;\n\n  // An hour, approximately, because a minute\n  // may be longer than 60 seconds, due to \"leap seconds\".\n  //\n  // Still, Javascript `Date` (and UNIX time in general) intentionally\n  // drops the concept of \"leap seconds\" in order to make things simpler.\n  // So it's fine.\n  // https://stackoverflow.com/questions/53019726/where-are-the-leap-seconds-in-javascript\n  //\n  // \"The JavaScript Date object specifically adheres to the concept of Unix Time\n  //  (albeit with higher precision). This is part of the POSIX specification,\n  //  and thus is sometimes called \"POSIX Time\". It does not count leap seconds,\n  //  but rather assumes every day had exactly 86,400 seconds. You can read about\n  //  this in section 20.3.1.1 of the current ECMAScript specification, which states:\n  //\n  //  \"Time is measured in ECMAScript in milliseconds since 01 January, 1970 UTC.\n  //   In time values leap seconds are ignored. It is assumed that there are exactly\n  //   86,400,000 milliseconds per day.\"\n  //\n  //  The fact is, that the unpredictable nature of leap seconds makes them very\n  //  difficult to work with in APIs. One can't generally pass timestamps around\n  //  that need leap seconds tables to be interpreted correctly, and expect that\n  //  one system will interpret them the same as another. For example, while your\n  //  example timestamp 1483228826 is 2017-01-01T00:00:00Z on your system,\n  //  it would be interpreted as 2017-01-01T00:00:26Z on POSIX based systems,\n  //  or systems without leap second tables. So they aren't portable.\n  //  Even on systems that have full updated tables, there's no telling what those\n  //  tables will contain in the future (beyond the 6-month IERS announcement period),\n  //  so I can't produce a future timestamp without risk that it may eventually change.\n  //\n  //  To be clear - to support leap seconds in a programming language, the implementation\n  //  must go out of its way to do so, and must make tradeoffs that are not always acceptable.\n  //  Though there are exceptions, the general position is to not support them - not because\n  //  of any subversion or active countermeasures, but because supporting them properly is much,\n  //  much harder.\"\n  //\n  // https://en.wikipedia.org/wiki/Unix_time#Leap_seconds\n  // https://en.wikipedia.org/wiki/Leap_year\n  // https://en.wikipedia.org/wiki/Leap_second\n  //\n  var hour = 60 * 60 * 1000;\n  return new Date(Math.round((excelSerialDate - daysBeforeUnixEpoch) * 24 * hour));\n}\n//# sourceMappingURL=parseDate.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n// XLSX does have \"d\" type for dates, but it's not commonly used.\n// Instead, it prefers using \"n\" type for storing dates as timestamps.\n//\n// Whether a numeric value is a number or a date timestamp, it sometimes could be\n// detected by looking at the value \"format\" and seeing if it's a date-specific one.\n// https://github.com/catamphetamine/read-excel-file/issues/3#issuecomment-395770777\n//\n// The list of generic numeric value \"formats\":\n// https://xlsxwriter.readthedocs.io/format.html#format-set-num-format\n//\nexport default function isDateTimestamp(styleId, styles, options) {\n  if (styleId) {\n    var style = styles[styleId];\n    if (!style) {\n      throw new Error(\"Cell style not found: \".concat(styleId));\n    }\n    if (!style.numberFormat) {\n      return false;\n    }\n    if (\n    // Whether it's a \"number format\" that's conventionally used for storing date timestamps.\n    BUILT_IN_DATE_NUMBER_FORMAT_IDS.indexOf(Number(style.numberFormat.id)) >= 0 ||\n    // Whether it's a \"number format\" that uses a \"formatting template\"\n    // that the developer is certain is a date formatting template.\n    options.dateFormat && style.numberFormat.template === options.dateFormat ||\n    // Whether the \"smart formatting template\" feature is not disabled\n    // and it has detected that it's a date formatting template by looking at it.\n    options.smartDateParser !== false && style.numberFormat.template && isDateTemplate(style.numberFormat.template)) {\n      return true;\n    }\n  }\n}\n\n// https://hexdocs.pm/xlsxir/number_styles.html\nvar BUILT_IN_DATE_NUMBER_FORMAT_IDS = [14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 30, 36, 45, 46, 47, 50, 57];\n\n// On some date formats, there's an \"[$-414]\" prefix.\n// I don't have any idea what that is.\n//\n// https://stackoverflow.com/questions/4730152/what-indicates-an-office-open-xml-cell-contains-a-date-time-value\n//\n// Examples:\n//\n// * 27 (built-in format) \"[$-404]e/m/d\"\n// * 164 (custom format) \"[$-414]mmmm\\ yyyy;@\"\n//\nvar DATE_FORMAT_WEIRD_PREFIX = /^\\[\\$-414\\]/;\n\n// On some date formats, there's an \";@\" postfix.\n// I don't have any idea what that is.\n// Examples:\n//\n// * 164 (custom format) \"m/d/yyyy;@\"\n// * 164 (custom format) \"[$-414]mmmm\\ yyyy;@\"\n//\nvar DATE_FORMAT_WEIRD_POSTFIX = /;@$/;\nfunction isDateTemplate(template) {\n  // Date format tokens could be in upper case or in lower case.\n  // There seems to be no single standard.\n  // So lowercase the template first.\n  template = template.toLowerCase();\n\n  // On some date formats, there's an \"[$-414]\" prefix.\n  // I don't have any idea what that is. Trim it.\n  template = template.replace(DATE_FORMAT_WEIRD_PREFIX, '');\n\n  // On some date formats, there's an \";@\" postfix.\n  // I don't have any idea what that is. Trim it.\n  template = template.replace(DATE_FORMAT_WEIRD_POSTFIX, '');\n  var tokens = template.split(/\\W+/);\n  for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n    var token = _step.value;\n    if (DATE_TEMPLATE_TOKENS.indexOf(token) < 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// These tokens could be in upper case or in lower case.\n// There seems to be no single standard, so using lower case.\nvar DATE_TEMPLATE_TOKENS = [\n// Seconds (min two digits). Example: \"05\".\n'ss',\n// Minutes (min two digits). Example: \"05\". Could also be \"Months\". Weird.\n'mm',\n// Hours. Example: \"1\".\n'h',\n// Hours (min two digits). Example: \"01\".\n'hh',\n// \"AM\" part of \"AM/PM\". Lowercased just in case.\n'am',\n// \"PM\" part of \"AM/PM\". Lowercased just in case.\n'pm',\n// Day. Example: \"1\"\n'd',\n// Day (min two digits). Example: \"01\"\n'dd',\n// Month (numeric). Example: \"1\".\n'm',\n// Month (numeric, min two digits). Example: \"01\". Could also be \"Minutes\". Weird.\n'mm',\n// Month (shortened month name). Example: \"Jan\".\n'mmm',\n// Month (full month name). Example: \"January\".\n'mmmm',\n// Two-digit year. Example: \"20\".\n'yy',\n// Full year. Example: \"2020\".\n'yyyy',\n// I don't have any idea what \"e\" means.\n// It's used in \"built-in\" XLSX formats:\n// * 27 '[$-404]e/m/d';\n// * 36 '[$-404]e/m/d';\n// * 50 '[$-404]e/m/d';\n// * 57 '[$-404]e/m/d';\n'e'];\n//# sourceMappingURL=isDateTimestamp.js.map","import parseDate from './parseDate.js';\nimport isDateTimestamp from './isDateTimestamp.js';\n\n// Parses a string `value` of a cell.\nexport default function parseCellValue(value, type, _ref) {\n  var getInlineStringValue = _ref.getInlineStringValue,\n    getInlineStringXml = _ref.getInlineStringXml,\n    getStyleId = _ref.getStyleId,\n    styles = _ref.styles,\n    values = _ref.values,\n    properties = _ref.properties,\n    options = _ref.options;\n  if (!type) {\n    // Default cell type is \"n\" (numeric).\n    // http://www.datypic.com/sc/ooxml/t-ssml_CT_Cell.html\n    type = 'n';\n  }\n\n  // Available Excel cell types:\n  // https://github.com/SheetJS/sheetjs/blob/19620da30be2a7d7b9801938a0b9b1fd3c4c4b00/docbits/52_datatype.md\n  //\n  // Some other document (seems to be old):\n  // http://webapp.docx4java.org/OnlineDemo/ecma376/SpreadsheetML/ST_CellType.html\n  //\n  switch (type) {\n    // XLSX tends to store all strings as \"shared\" (indexed) ones\n    // using \"s\" cell type (for saving on strage space).\n    // \"str\" cell type is then generally only used for storing\n    // formula-pre-calculated cell values.\n    case 'str':\n      value = parseString(value, options);\n      break;\n\n    // Sometimes, XLSX stores strings as \"inline\" strings rather than \"shared\" (indexed) ones.\n    // Perhaps the specification doesn't force it to use one or another.\n    // Example: `<sheetData><row r=\"1\"><c r=\"A1\" s=\"1\" t=\"inlineStr\"><is><t>Test 123</t></is></c></row></sheetData>`.\n    case 'inlineStr':\n      value = getInlineStringValue();\n      if (value === undefined) {\n        throw new Error(\"Unsupported \\\"inline string\\\" cell value structure: \".concat(getInlineStringXml()));\n      }\n      value = parseString(value, options);\n      break;\n\n    // XLSX tends to store string values as \"shared\" (indexed) ones.\n    // \"Shared\" strings is a way for an Excel editor to reduce\n    // the file size by storing \"commonly used\" strings in a dictionary\n    // and then referring to such strings by their index in that dictionary.\n    // Example: `<sheetData><row r=\"1\"><c r=\"A1\" s=\"1\" t=\"s\"><v>0</v></c></row></sheetData>`.\n    case 's':\n      // If a cell has no value then there's no `<c/>` element for it.\n      // If a `<c/>` element exists then it's not empty.\n      // The `<v/>`alue is a key in the \"shared strings\" dictionary of the\n      // XLSX file, so look it up in the `values` dictionary by the numeric key.\n      var sharedStringIndex = Number(value);\n      if (isNaN(sharedStringIndex)) {\n        throw new Error(\"Invalid \\\"shared\\\" string index: \".concat(value));\n      }\n      if (sharedStringIndex >= values.length) {\n        throw new Error(\"An out-of-bounds \\\"shared\\\" string index: \".concat(value));\n      }\n      value = values[sharedStringIndex];\n      value = parseString(value, options);\n      break;\n\n    // Boolean (TRUE/FALSE) values are stored as either \"1\" or \"0\"\n    // in cells of type \"b\".\n    case 'b':\n      if (value === '1') {\n        value = true;\n      } else if (value === '0') {\n        value = false;\n      } else {\n        throw new Error(\"Unsupported \\\"boolean\\\" cell value: \".concat(value));\n      }\n      break;\n\n    // XLSX specification seems to support cells of type \"z\":\n    // blank \"stub\" cells that should be ignored by data processing utilities.\n    case 'z':\n      value = undefined;\n      break;\n\n    // XLSX specification also defines cells of type \"e\" containing a numeric \"error\" code.\n    // It's not clear what that means though.\n    // They also wrote: \"and `w` property stores its common name\".\n    // It's unclear what they meant by that.\n    case 'e':\n      value = decodeError(value);\n      break;\n\n    // XLSX supports date cells of type \"d\", though seems like it (almost?) never\n    // uses it for storing dates, preferring \"n\" numeric timestamp cells instead.\n    // The value of a \"d\" cell is supposedly a string in \"ISO 8601\" format.\n    // I haven't seen an XLSX file having such cells.\n    // Example: `<sheetData><row r=\"1\"><c r=\"A1\" s=\"1\" t=\"d\"><v>2021-06-10T00:47:45.700Z</v></c></row></sheetData>`.\n    case 'd':\n      if (value === undefined) {\n        break;\n      }\n      var parsedDate = new Date(value);\n      if (isNaN(parsedDate.valueOf())) {\n        throw new Error(\"Unsupported \\\"date\\\" cell value: \".concat(value));\n      }\n      value = parsedDate;\n      break;\n\n    // Numeric cells have type \"n\".\n    case 'n':\n      if (value === undefined) {\n        break;\n      }\n      var isDateTimestampNumber = isDateTimestamp(getStyleId(), styles, options);\n      // XLSX does have \"d\" type for dates, but it's not commonly used.\n      // Instead, it prefers using \"n\" type for storing dates as timestamps.\n      if (isDateTimestampNumber) {\n        // Parse the number from string.\n        value = parseNumberDefault(value);\n        // Parse the number as a date timestamp.\n        value = parseDate(value, properties);\n      } else {\n        // Parse the number from string.\n        // Supports custom parsing function to work around javascript number encoding precision issues.\n        // https://gitlab.com/catamphetamine/read-excel-file/-/issues/85\n        value = (options.parseNumber || parseNumberDefault)(value);\n      }\n      break;\n    default:\n      throw new TypeError(\"Cell type not supported: \".concat(type));\n  }\n\n  // Convert empty values to `null`.\n  if (value === undefined) {\n    value = null;\n  }\n  return value;\n}\n\n// Decodes numeric error code to a string code.\n// https://github.com/SheetJS/sheetjs/blob/19620da30be2a7d7b9801938a0b9b1fd3c4c4b00/docbits/52_datatype.md\nfunction decodeError(errorCode) {\n  // While the error values are determined by the application,\n  // the following are some example error values that could be used:\n  switch (errorCode) {\n    case 0x00:\n      return '#NULL!';\n    case 0x07:\n      return '#DIV/0!';\n    case 0x0F:\n      return '#VALUE!';\n    case 0x17:\n      return '#REF!';\n    case 0x1D:\n      return '#NAME?';\n    case 0x24:\n      return '#NUM!';\n    case 0x2A:\n      return '#N/A';\n    case 0x2B:\n      return '#GETTING_DATA';\n    default:\n      // Such error code doesn't exist. I made it up.\n      return \"#ERROR_\".concat(errorCode);\n  }\n}\nfunction parseString(value, options) {\n  // In some weird cases, a developer might want to disable\n  // the automatic trimming of all strings.\n  // For example, leading spaces might express a tree-like hierarchy.\n  // https://github.com/catamphetamine/read-excel-file/pull/106#issuecomment-1136062917\n  if (options.trim !== false) {\n    value = value.trim();\n  }\n  if (value === '') {\n    value = undefined;\n  }\n  return value;\n}\n\n// Parses a number from string.\n// Throws an error if the number couldn't be parsed.\n// When parsing floating-point number, is affected by\n// the javascript number encoding precision issues:\n// https://www.youtube.com/watch?v=2gIxbTn7GSc\n// https://www.avioconsulting.com/blog/overcoming-javascript-numeric-precision-issues\nfunction parseNumberDefault(stringifiedNumber) {\n  var parsedNumber = Number(stringifiedNumber);\n  if (isNaN(parsedNumber)) {\n    throw new Error(\"Invalid \\\"numeric\\\" cell value: \".concat(stringifiedNumber));\n  }\n  return parsedNumber;\n}\n//# sourceMappingURL=parseCellValue.js.map","// Maps \"A1\"-like coordinates to `{ row, column }` numeric coordinates.\nvar LETTERS = [\"\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\nexport function calculateDimensions(cells) {\n  var comparator = function comparator(a, b) {\n    return a - b;\n  };\n  var allRows = cells.map(function (cell) {\n    return cell.row;\n  }).sort(comparator);\n  var allCols = cells.map(function (cell) {\n    return cell.column;\n  }).sort(comparator);\n  var minRow = allRows[0];\n  var maxRow = allRows[allRows.length - 1];\n  var minCol = allCols[0];\n  var maxCol = allCols[allCols.length - 1];\n  return [{\n    row: minRow,\n    column: minCol\n  }, {\n    row: maxRow,\n    column: maxCol\n  }];\n}\n\n// Converts a letter coordinate to a digit coordinate.\n// Examples: \"A\" -> 1, \"B\" -> 2, \"Z\" -> 26, \"AA\" -> 27, etc.\nfunction columnLettersToNumber(columnLetters) {\n  // `for ... of ...` would require Babel polyfill for iterating a string.\n  var n = 0;\n  var i = 0;\n  while (i < columnLetters.length) {\n    n *= 26;\n    n += LETTERS.indexOf(columnLetters[i]);\n    i++;\n  }\n  return n;\n}\nexport function parseCellCoordinates(coords) {\n  // Coordinate examples: \"AA2091\", \"R988\", \"B1\".\n  coords = coords.split(/(\\d+)/);\n  return [\n  // Row.\n  parseInt(coords[1]),\n  // Column.\n  columnLettersToNumber(coords[0].trim())];\n}\n//# sourceMappingURL=coordinates.js.map","import parseCellValue from './parseCellValue.js';\nimport { parseCellCoordinates } from './coordinates.js';\nimport { getCellValue, getCellInlineStringValue } from '../xml/xlsx.js';\nimport { getOuterXml } from '../xml/dom.js';\n\n// Example of a `<c/>`ell element:\n//\n// <c>\n//    <f>string</f> — formula.\n//    <v>string</v> — formula pre-computed value.\n//    <is>\n//       <t>string</t> — an `inlineStr` string (rather than a \"common string\" from a dictionary).\n//       <r>\n//          <rPr>\n//            ...\n//          </rPr>\n//          <t>string</t>\n//       </r>\n//       <rPh sb=\"1\" eb=\"1\">\n//          <t>string</t>\n//       </rPh>\n//       <phoneticPr fontId=\"1\"/>\n//    </is>\n//    <extLst>\n//       <ext>\n//          <!--any element-->\n//       </ext>\n//    </extLst>\n// </c>\n//\nexport default function parseCell(node, sheet, xml, values, styles, properties, options) {\n  var coords = parseCellCoordinates(node.getAttribute('r'));\n  var valueElement = getCellValue(sheet, node);\n\n  // For `xpath`, `value` can be `undefined` while for native `DOMParser` it's `null`.\n  // So using `value && ...` instead of `if (value !== undefined) { ... }` here\n  // for uniform compatibility with both `xpath` and native `DOMParser`.\n  var value = valueElement && valueElement.textContent;\n  var type;\n  if (node.hasAttribute('t')) {\n    type = node.getAttribute('t');\n  }\n  return {\n    row: coords[0],\n    column: coords[1],\n    value: parseCellValue(value, type, {\n      getInlineStringValue: function getInlineStringValue() {\n        return getCellInlineStringValue(sheet, node);\n      },\n      getInlineStringXml: function getInlineStringXml() {\n        return getOuterXml(node);\n      },\n      getStyleId: function getStyleId() {\n        return node.getAttribute('s');\n      },\n      styles: styles,\n      values: values,\n      properties: properties,\n      options: options\n    })\n  };\n}\n//# sourceMappingURL=parseCell.js.map","import parseCell from './parseCell.js';\nimport { getCells, getMergedCells } from '../xml/xlsx.js';\nexport default function parseCells(sheet, xml, values, styles, properties, options) {\n  var cells = getCells(sheet);\n  if (cells.length === 0) {\n    return [];\n  }\n\n  // const mergedCells = getMergedCells(sheet)\n  // for (const mergedCell of mergedCells) {\n  //   const [from, to] = mergedCell.split(':').map(parseCellCoordinates)\n  //   console.log('Merged Cell.', 'From:', from, 'To:', to)\n  // }\n\n  return cells.map(function (node) {\n    return parseCell(node, sheet, xml, values, styles, properties, options);\n  });\n}\n//# sourceMappingURL=parseCells.js.map","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport { parseCellCoordinates } from './coordinates.js';\nimport { getDimensions } from '../xml/xlsx.js';\n\n// `dimensions` defines the spreadsheet area containing all non-empty cells.\n// https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sheetdimension?view=openxml-2.8.1\nexport default function parseDimensions(sheet) {\n  var dimensions = getDimensions(sheet);\n  if (dimensions) {\n    dimensions = dimensions.split(':').map(parseCellCoordinates).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        row = _ref2[0],\n        column = _ref2[1];\n      return {\n        row: row,\n        column: column\n      };\n    });\n    // Sometimes there can be just a single cell as a spreadsheet's \"dimensions\".\n    // For example, the default \"dimensions\" in Apache POI library is \"A1\",\n    // meaning that only the first cell in the spreadsheet is used.\n    //\n    // A quote from Apache POI library:\n    // \"Single cell ranges are formatted like single cell references (e.g. 'A1' instead of 'A1:A1').\"\n    //\n    if (dimensions.length === 1) {\n      dimensions = [dimensions[0], dimensions[0]];\n    }\n    return dimensions;\n  }\n}\n//# sourceMappingURL=parseDimensions.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nexport default function dropEmptyRows(data) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    rowIndexMap = _ref.rowIndexMap,\n    _ref$accessor = _ref.accessor,\n    accessor = _ref$accessor === void 0 ? function (_) {\n      return _;\n    } : _ref$accessor,\n    onlyTrimAtTheEnd = _ref.onlyTrimAtTheEnd;\n  // Drop empty rows.\n  var i = data.length - 1;\n  while (i >= 0) {\n    // Check if the row is empty.\n    var empty = true;\n    for (var _iterator = _createForOfIteratorHelperLoose(data[i]), _step; !(_step = _iterator()).done;) {\n      var cell = _step.value;\n      if (accessor(cell) !== null) {\n        empty = false;\n        break;\n      }\n    }\n    // Remove the empty row.\n    if (empty) {\n      data.splice(i, 1);\n      if (rowIndexMap) {\n        rowIndexMap.splice(i, 1);\n      }\n    } else if (onlyTrimAtTheEnd) {\n      break;\n    }\n    i--;\n  }\n  return data;\n}\n//# sourceMappingURL=dropEmptyRows.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nexport default function dropEmptyColumns(data) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$accessor = _ref.accessor,\n    accessor = _ref$accessor === void 0 ? function (_) {\n      return _;\n    } : _ref$accessor,\n    onlyTrimAtTheEnd = _ref.onlyTrimAtTheEnd;\n  var i = data[0].length - 1;\n  while (i >= 0) {\n    var empty = true;\n    for (var _iterator = _createForOfIteratorHelperLoose(data), _step; !(_step = _iterator()).done;) {\n      var row = _step.value;\n      if (accessor(row[i]) !== null) {\n        empty = false;\n        break;\n      }\n    }\n    if (empty) {\n      var j = 0;\n      while (j < data.length) {\n        data[j].splice(i, 1);\n        j++;\n      }\n    } else if (onlyTrimAtTheEnd) {\n      break;\n    }\n    i--;\n  }\n  return data;\n}\n//# sourceMappingURL=dropEmptyColumns.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport dropEmptyRows from './dropEmptyRows.js';\nimport dropEmptyColumns from './dropEmptyColumns.js';\nexport default function getData(sheet, options) {\n  var dimensions = sheet.dimensions,\n    cells = sheet.cells;\n\n  // If the sheet is empty.\n  if (cells.length === 0) {\n    return [];\n  }\n  var _dimensions = _slicedToArray(dimensions, 2),\n    leftTop = _dimensions[0],\n    rightBottom = _dimensions[1];\n\n  // Don't discard empty rows or columns at the start.\n  // https://github.com/catamphetamine/read-excel-file/issues/102\n  // const colsCount = (rightBottom.column - leftTop.column) + 1\n  // const rowsCount = (rightBottom.row - leftTop.row) + 1\n\n  var colsCount = rightBottom.column;\n  var rowsCount = rightBottom.row;\n\n  // Initialize spreadsheet data structure.\n  var data = new Array(rowsCount);\n  var i = 0;\n  while (i < rowsCount) {\n    data[i] = new Array(colsCount);\n    var j = 0;\n    while (j < colsCount) {\n      data[i][j] = null;\n      j++;\n    }\n    i++;\n  }\n\n  // Fill in spreadsheet `data`.\n  // (this code implies that `cells` aren't necessarily sorted by row and column:\n  //  maybe that's not correct, this piece code was initially copy-pasted\n  //  from some other library that used `XPath`)\n  for (var _iterator = _createForOfIteratorHelperLoose(cells), _step; !(_step = _iterator()).done;) {\n    var cell = _step.value;\n    // Don't discard empty rows or columns at the start.\n    // https://github.com/catamphetamine/read-excel-file/issues/102\n    // const rowIndex = cell.row - leftTop.row\n    // const columnIndex = cell.column - leftTop.column\n    var rowIndex = cell.row - 1;\n    var columnIndex = cell.column - 1;\n    // Ignore the data in the cell if it's outside of the spreadsheet's \"dimensions\".\n    if (columnIndex < colsCount && rowIndex < rowsCount) {\n      data[rowIndex][columnIndex] = cell.value;\n    }\n  }\n\n  // Fill in the row map.\n  var rowIndexMap = options.rowMap;\n  if (rowIndexMap) {\n    var _i = 0;\n    while (_i < data.length) {\n      rowIndexMap[_i] = _i;\n      _i++;\n    }\n  }\n\n  // Drop empty columns or rows.\n  data = dropEmptyRows(dropEmptyColumns(data, {\n    onlyTrimAtTheEnd: true\n  }), {\n    onlyTrimAtTheEnd: true,\n    rowIndexMap: rowIndexMap\n  });\n\n  // Optionally transform data before applying `schema`.\n  if (options.transformData) {\n    data = options.transformData(data);\n    // data = options.transformData(data, {\n    //   dropEmptyRowsAndColumns(data) {\n    //     return dropEmptyRows(dropEmptyColumns(data), { rowIndexMap })\n    //   }\n    // })\n  }\n\n  return data;\n}\n//# sourceMappingURL=getData.js.map","function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport parseProperties from './parseProperties.js';\nimport parseFilePaths from './parseFilePaths.js';\nimport parseStyles from './parseStyles.js';\nimport parseSharedStrings from './parseSharedStrings.js';\nimport parseSheet from './parseSheet.js';\nimport getData from './getData.js';\n\n// For an introduction in reading `*.xlsx` files see \"The minimum viable XLSX reader\":\n// https://www.brendanlong.com/the-minimum-viable-xlsx-reader.html\n\n/**\r\n * Reads an (unzipped) XLSX file structure into a 2D array of cells.\r\n * @param  {object} contents - A list of XML files inside XLSX file (which is a zipped directory).\r\n * @param  {number?} options.sheet - Workbook sheet id (`1` by default).\r\n * @param  {string?} options.dateFormat - Date format, e.g. \"mm/dd/yyyy\". Values having this format template set will be parsed as dates.\r\n * @param  {object} contents - A list of XML files inside XLSX file (which is a zipped directory).\r\n * @return {object} An object of shape `{ data, cells, properties }`. `data: string[][]` is an array of rows, each row being an array of cell values. `cells: string[][]` is an array of rows, each row being an array of cells. `properties: object` is the spreadsheet properties (e.g. whether date epoch is 1904 instead of 1900).\r\n */\nexport default function readXlsx(contents, xml) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!options.sheet) {\n    options = _objectSpread({\n      sheet: 1\n    }, options);\n  }\n  var getXmlFileContent = function getXmlFileContent(filePath) {\n    if (!contents[filePath]) {\n      throw new Error(\"\\\"\".concat(filePath, \"\\\" file not found inside the *.xlsx file zip archive\"));\n    }\n    return contents[filePath];\n  };\n\n  // Some Excel editors don't want to use standard naming scheme for sheet files.\n  // https://github.com/tidyverse/readxl/issues/104\n  var filePaths = parseFilePaths(getXmlFileContent('xl/_rels/workbook.xml.rels'), xml);\n\n  // Default file path for \"shared strings\": \"xl/sharedStrings.xml\".\n  var values = filePaths.sharedStrings ? parseSharedStrings(getXmlFileContent(filePaths.sharedStrings), xml) : [];\n\n  // Default file path for \"styles\": \"xl/styles.xml\".\n  var styles = filePaths.styles ? parseStyles(getXmlFileContent(filePaths.styles), xml) : {};\n  var properties = parseProperties(getXmlFileContent('xl/workbook.xml'), xml);\n\n  // A feature for getting the list of sheets in an Excel file.\n  // https://github.com/catamphetamine/read-excel-file/issues/14\n  if (options.getSheets) {\n    return properties.sheets.map(function (_ref) {\n      var name = _ref.name;\n      return {\n        name: name\n      };\n    });\n  }\n\n  // Find the sheet by name, or take the first one.\n  var sheetId = getSheetId(options.sheet, properties.sheets);\n\n  // If the sheet wasn't found then throw an error.\n  // Example: \"xl/worksheets/sheet1.xml\".\n  if (!sheetId || !filePaths.sheets[sheetId]) {\n    throw createSheetNotFoundError(options.sheet, properties.sheets);\n  }\n\n  // Parse sheet data.\n  var sheet = parseSheet(getXmlFileContent(filePaths.sheets[sheetId]), xml, values, styles, properties, options);\n  options = _objectSpread({\n    // Create a `rowIndexMap` for the original dataset, if not passed,\n    // because \"empty\" rows will be dropped from the input data.\n    rowMap: []\n  }, options);\n\n  // Get spreadsheet data.\n  var data = getData(sheet, options);\n\n  // Can return properties, if required.\n  if (options.properties) {\n    return {\n      data: data,\n      properties: properties\n    };\n  }\n\n  // Return spreadsheet data.\n  return data;\n}\nfunction getSheetId(sheet, sheets) {\n  if (typeof sheet === 'number') {\n    var _sheet = sheets[sheet - 1];\n    return _sheet && _sheet.relationId;\n  }\n  for (var _iterator = _createForOfIteratorHelperLoose(sheets), _step; !(_step = _iterator()).done;) {\n    var _sheet2 = _step.value;\n    if (_sheet2.name === sheet) {\n      return _sheet2.relationId;\n    }\n  }\n}\nfunction createSheetNotFoundError(sheet, sheets) {\n  var sheetsList = sheets && sheets.map(function (sheet, i) {\n    return \"\\\"\".concat(sheet.name, \"\\\" (#\").concat(i + 1, \")\");\n  }).join(', ');\n  return new Error(\"Sheet \".concat(typeof sheet === 'number' ? '#' + sheet : '\"' + sheet + '\"', \" not found in the *.xlsx file.\").concat(sheets ? ' Available sheets: ' + sheetsList + '.' : ''));\n}\n//# sourceMappingURL=readXlsx.js.map","import { getSharedStrings } from '../xml/xlsx.js';\nexport default function parseSharedStrings(content, xml) {\n  if (!content) {\n    return [];\n  }\n  return getSharedStrings(xml.createDocument(content));\n}\n//# sourceMappingURL=parseSharedStrings.js.map","import parseCells from './parseCells.js';\nimport parseDimensions from './parseDimensions.js';\nimport { calculateDimensions } from './coordinates.js';\nexport default function parseSheet(content, xml, values, styles, properties, options) {\n  var sheet = xml.createDocument(content);\n  var cells = parseCells(sheet, xml, values, styles, properties, options);\n\n  // `dimensions` defines the spreadsheet area containing all non-empty cells.\n  // https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sheetdimension?view=openxml-2.8.1\n  var dimensions = parseDimensions(sheet) || calculateDimensions(cells);\n  return {\n    cells: cells,\n    dimensions: dimensions\n  };\n}\n//# sourceMappingURL=parseSheet.js.map","function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar InvalidError = /*#__PURE__*/function (_Error) {\n  _inherits(InvalidError, _Error);\n  var _super = _createSuper(InvalidError);\n  function InvalidError(reason) {\n    var _this;\n    _classCallCheck(this, InvalidError);\n    _this = _super.call(this, 'invalid');\n    _this.reason = reason;\n    return _this;\n  }\n  return _createClass(InvalidError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexport { InvalidError as default };\n//# sourceMappingURL=InvalidError.js.map","import InvalidError from './InvalidError.js';\nexport default function NumberType(value) {\n  // An XLSX file editing software might not always correctly\n  // detect numeric values in string-type cells. Users won't bother\n  // manually selecting a cell type, so the editing software has to guess\n  // based on the user's input. One can assume that such auto-detection\n  // might not always work.\n  //\n  // So, if a cell is supposed to be a numeric one, convert a string value to a number.\n  //\n  if (typeof value === 'string') {\n    var stringifiedValue = value;\n    value = Number(value);\n    if (String(value) !== stringifiedValue) {\n      throw new InvalidError('not_a_number');\n    }\n  }\n  if (typeof value !== 'number') {\n    throw new InvalidError('not_a_number');\n  }\n  if (isNaN(value)) {\n    throw new InvalidError('invalid_number');\n  }\n  // At this point, `value` can only be a number.\n  //\n  // The global `isFinite()` function filters out:\n  // * NaN\n  // * -Infinity\n  // * Infinity\n  //\n  // All other values pass (including non-numbers).\n  //\n  if (!isFinite(value)) {\n    throw new InvalidError('out_of_bounds');\n  }\n  return value;\n}\n//# sourceMappingURL=Number.js.map","import InvalidError from './InvalidError.js';\nexport default function StringType(value) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  // Excel tends to perform a forced automatic convertion of string-type values\n  // to number-type ones when the user has input them. Otherwise, users wouldn't\n  // be able to perform formula calculations on those cell values because users\n  // won't bother manually choosing a \"numeric\" cell type for each cell, and\n  // even if they did, choosing a \"numeric\" cell type every time wouldn't be an\n  // acceptable \"user experience\".\n  //\n  // So, if a cell value is supposed to be a string and Excel has automatically\n  // converted it to a number, perform a backwards conversion.\n  //\n  if (typeof value === 'number') {\n    if (isNaN(value)) {\n      throw new InvalidError('invalid_number');\n    }\n    // The global `isFinite()` function filters out:\n    // * NaN\n    // * -Infinity\n    // * Infinity\n    //\n    // All other values pass (including non-numbers).\n    //\n    if (!isFinite(value)) {\n      throw new InvalidError('out_of_bounds');\n    }\n    return String(value);\n  }\n  throw new InvalidError('not_a_string');\n}\n//# sourceMappingURL=String.js.map","import InvalidError from './InvalidError.js';\nexport default function BooleanType(value) {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n  throw new InvalidError('not_a_boolean');\n}\n//# sourceMappingURL=Boolean.js.map","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport NumberType from '../../types/Number.js';\nimport StringType from '../../types/String.js';\nimport BooleanType from '../../types/Boolean.js';\nimport DateType from '../../types/Date.js';\nvar DEFAULT_OPTIONS = {\n  schemaPropertyValueForMissingColumn: undefined,\n  schemaPropertyValueForUndefinedCellValue: undefined,\n  schemaPropertyValueForNullCellValue: null,\n  schemaPropertyShouldSkipRequiredValidationForMissingColumn: function schemaPropertyShouldSkipRequiredValidationForMissingColumn() {\n    return false;\n  },\n  // `getEmptyObjectValue(object, { path })` applies to both the top-level object\n  // and any of its sub-objects.\n  getEmptyObjectValue: function getEmptyObjectValue() {\n    return null;\n  },\n  getEmptyArrayValue: function getEmptyArrayValue() {\n    return null;\n  },\n  isColumnOriented: false,\n  arrayValueSeparator: ','\n};\n\n/**\r\n * (this function is exported from `read-excel-file/map`)\r\n * Converts spreadsheet-alike data structure into an array of objects.\r\n * The first row should be the list of column headers.\r\n * @param {any[][]} data - An array of rows, each row being an array of cells.\r\n * @param {object} schema\r\n * @param {object} [options]\r\n * @param {null} [options.schemaPropertyValueForMissingColumn] — By default, when some of the `schema` columns are missing in the input `data`, those properties are set to `undefined` in the output objects. Pass `schemaPropertyValueForMissingColumn: null` to set such \"missing column\" properties to `null` in the output objects.\r\n * @param {null} [options.schemaPropertyValueForNullCellValue] — By default, when it encounters a `null` value in a cell in input `data`, it sets it to `undefined` in the output object. Pass `schemaPropertyValueForNullCellValue: null` to make it set such values as `null`s in output objects.\r\n * @param {null} [options.schemaPropertyValueForUndefinedCellValue] — By default, when it encounters an `undefined` value in a cell in input `data`, it it sets it to `undefined` in the output object. Pass `schemaPropertyValueForUndefinedCellValue: null` to make it set such values as `null`s in output objects.\r\n * @param {boolean} [options.schemaPropertyShouldSkipRequiredValidationForMissingColumn(column: string, { object })] — By default, it does apply `required` validation to `schema` properties for which columns are missing in the input `data`. One could pass a custom `schemaPropertyShouldSkipRequiredValidationForMissingColumn(column, { object })` to disable `required` validation for missing columns in some or all cases.\r\n * @param {function} [options.getEmptyObjectValue(object, { path })] — By default, it returns `null` for an \"empty\" resulting object. One could override that value using `getEmptyObjectValue(object, { path })` parameter. The value applies to both top-level object and any nested sub-objects in case of a nested schema, hence the additional `path?: string` parameter.\r\n * @param {function} [getEmptyArrayValue(array, { path })] — By default, it returns `null` for an \"empty\" array value. One could override that value using `getEmptyArrayValue(array, { path })` parameter.\r\n * @param {boolean} [options.isColumnOriented] — By default, the headers are assumed to be the first row in the `data`. Pass `isColumnOriented: true` if the headers are the first column in the `data`. i.e. if `data` is \"transposed\".\r\n * @param {object} [options.rowIndexMap] — Custom row index mapping `data` rows. If present, will overwrite the indexes of `data` rows with the indexes from this `rowIndexMap`.\r\n * @return {object[]}\r\n */\nexport default function (data, schema, options) {\n  if (options) {\n    options = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n  } else {\n    options = DEFAULT_OPTIONS;\n  }\n  var _options = options,\n    isColumnOriented = _options.isColumnOriented,\n    rowIndexMap = _options.rowIndexMap;\n  validateSchema(schema);\n  if (isColumnOriented) {\n    data = transpose(data);\n  }\n  var columns = data[0];\n  var results = [];\n  var errors = [];\n  for (var i = 1; i < data.length; i++) {\n    var result = read(schema, data[i], i, undefined, columns, errors, options);\n    results.push(result);\n  }\n\n  // Set the correct `row` number in `errors` if a custom `rowIndexMap` is supplied.\n  if (rowIndexMap) {\n    for (var _iterator = _createForOfIteratorHelperLoose(errors), _step; !(_step = _iterator()).done;) {\n      var error = _step.value;\n      // Convert the `row` index in `data` to the\n      // actual `row` index in the spreadsheet.\n      // `- 1` converts row number to row index.\n      // `+ 1` converts row index to row number.\n      error.row = rowIndexMap[error.row - 1] + 1;\n    }\n  }\n  return {\n    rows: results,\n    errors: errors\n  };\n}\nfunction read(schema, row, rowIndex, path, columns, errors, options) {\n  var object = {};\n  var isEmptyObject = true;\n  var createError = function createError(_ref) {\n    var column = _ref.column,\n      value = _ref.value,\n      errorMessage = _ref.error,\n      reason = _ref.reason;\n    var error = {\n      error: errorMessage,\n      row: rowIndex + 1,\n      column: column,\n      value: value\n    };\n    if (reason) {\n      error.reason = reason;\n    }\n    if (schema[column].type) {\n      error.type = schema[column].type;\n    }\n    return error;\n  };\n  var pendingRequiredChecks = [];\n\n  // For each schema entry.\n  var _loop = function _loop() {\n    var key = _Object$keys[_i];\n    var schemaEntry = schema[key];\n    var isNestedSchema = _typeof(schemaEntry.type) === 'object' && !Array.isArray(schemaEntry.type);\n\n    // The path of this property inside the resulting object.\n    var propertyPath = \"\".concat(path || '', \".\").concat(schemaEntry.prop);\n\n    // Read the cell value for the schema entry.\n    var cellValue;\n    var columnIndex = columns.indexOf(key);\n    var isMissingColumn = columnIndex < 0;\n    if (!isMissingColumn) {\n      cellValue = row[columnIndex];\n    }\n    var value;\n    var error;\n    var reason;\n\n    // Get property `value` from cell value.\n    if (isNestedSchema) {\n      value = read(schemaEntry.type, row, rowIndex, propertyPath, columns, errors, options);\n    } else {\n      if (isMissingColumn) {\n        value = options.schemaPropertyValueForMissingColumn;\n      } else if (cellValue === undefined) {\n        value = options.schemaPropertyValueForUndefinedCellValue;\n      } else if (cellValue === null) {\n        value = options.schemaPropertyValueForNullCellValue;\n      } else if (Array.isArray(schemaEntry.type)) {\n        var array = parseArray(cellValue, options.arrayValueSeparator).map(function (_value) {\n          if (error) {\n            return;\n          }\n          var result = parseValue(_value, schemaEntry, options);\n          if (result.error) {\n            // In case of an error, `value` won't be returned and will just be reported\n            // as part of an `error` object, so it's fine assigning just an element of the array.\n            value = _value;\n            error = result.error;\n            reason = result.reason;\n          }\n          return result.value;\n        });\n        if (!error) {\n          var isEmpty = array.every(isEmptyValue);\n          value = isEmpty ? options.getEmptyArrayValue(array, {\n            path: propertyPath\n          }) : array;\n        }\n      } else {\n        var result = parseValue(cellValue, schemaEntry, options);\n        error = result.error;\n        reason = result.reason;\n        value = error ? cellValue : result.value;\n      }\n    }\n\n    // Apply `required` validation if the value is \"empty\".\n    if (!error && isEmptyValue(value)) {\n      if (schemaEntry.required) {\n        // Will perform this `required()` validation in the end,\n        // when all properties of the mapped object have been mapped.\n        pendingRequiredChecks.push({\n          column: key,\n          value: value,\n          isMissingColumn: isMissingColumn\n        });\n      }\n    }\n    if (error) {\n      // If there was an error then the property value in the `object` will be `undefined`,\n      // i.e it won't add the property value to the mapped object.\n      errors.push(createError({\n        column: key,\n        value: value,\n        error: error,\n        reason: reason\n      }));\n    } else {\n      // Possibly unmark the mapped object as \"empty\".\n      if (isEmptyObject && !isEmptyValue(value)) {\n        isEmptyObject = false;\n      }\n      // Set the value in the mapped object.\n      // Skip setting `undefined` values because they're already `undefined`.\n      if (value !== undefined) {\n        object[schemaEntry.prop] = value;\n      }\n    }\n  };\n  for (var _i = 0, _Object$keys = Object.keys(schema); _i < _Object$keys.length; _i++) {\n    _loop();\n  }\n\n  // Return `null` for an \"empty\" mapped object.\n  if (isEmptyObject) {\n    return options.getEmptyObjectValue(object, {\n      path: path\n    });\n  }\n\n  // Perform any `required` validations.\n  for (var _i2 = 0, _pendingRequiredCheck = pendingRequiredChecks; _i2 < _pendingRequiredCheck.length; _i2++) {\n    var _pendingRequiredCheck2 = _pendingRequiredCheck[_i2],\n      column = _pendingRequiredCheck2.column,\n      value = _pendingRequiredCheck2.value,\n      isMissingColumn = _pendingRequiredCheck2.isMissingColumn;\n    // Can optionally skip `required` validation for missing columns.\n    var skipRequiredValidation = isMissingColumn && options.schemaPropertyShouldSkipRequiredValidationForMissingColumn(column, {\n      object: object\n    });\n    if (!skipRequiredValidation) {\n      var required = schema[column].required;\n      var isRequired = typeof required === 'boolean' ? required : required(object);\n      if (isRequired) {\n        errors.push(createError({\n          column: column,\n          value: value,\n          error: 'required'\n        }));\n      }\n    }\n  }\n\n  // Return the mapped object.\n  return object;\n}\n\n/**\r\n * Converts textual value to a javascript typed value.\r\n * @param  {any} value\r\n * @param  {object} schemaEntry\r\n * @return {{ value: any, error: string }}\r\n */\nexport function parseValue(value, schemaEntry, options) {\n  if (value === null) {\n    return {\n      value: null\n    };\n  }\n  var result;\n  if (schemaEntry.parse) {\n    result = parseCustomValue(value, schemaEntry.parse);\n  } else if (schemaEntry.type) {\n    result = parseValueOfType(value,\n    // Supports parsing array types.\n    // See `parseArray()` function for more details.\n    // Example `type`: String[]\n    // Input: 'Barack Obama, \"String, with, colons\", Donald Trump'\n    // Output: ['Barack Obama', 'String, with, colons', 'Donald Trump']\n    Array.isArray(schemaEntry.type) ? schemaEntry.type[0] : schemaEntry.type, options);\n  } else {\n    result = {\n      value: value\n    };\n    // throw new Error('Invalid schema entry: no .type and no .parse():\\n\\n' + JSON.stringify(schemaEntry, null, 2))\n  }\n  // If errored then return the error.\n  if (result.error) {\n    return result;\n  }\n  if (result.value !== null) {\n    if (schemaEntry.oneOf && schemaEntry.oneOf.indexOf(result.value) < 0) {\n      return {\n        error: 'invalid',\n        reason: 'unknown'\n      };\n    }\n    if (schemaEntry.validate) {\n      try {\n        schemaEntry.validate(result.value);\n      } catch (error) {\n        return {\n          error: error.message\n        };\n      }\n    }\n  }\n  return result;\n}\n\n/**\r\n * Converts textual value to a custom value using supplied `.parse()`.\r\n * @param  {any} value\r\n * @param  {function} parse\r\n * @return {{ value: any, error: string }}\r\n */\nfunction parseCustomValue(value, parse) {\n  try {\n    value = parse(value);\n    if (value === undefined) {\n      return {\n        value: null\n      };\n    }\n    return {\n      value: value\n    };\n  } catch (error) {\n    var result = {\n      error: error.message\n    };\n    if (error.reason) {\n      result.reason = error.reason;\n    }\n    return result;\n  }\n}\n\n/**\r\n * Converts textual value to a javascript typed value.\r\n * @param  {any} value\r\n * @param  {} type\r\n * @return {{ value: (string|number|Date|boolean), error: string, reason?: string }}\r\n */\nfunction parseValueOfType(value, type, options) {\n  switch (type) {\n    case String:\n      return parseCustomValue(value, StringType);\n    case Number:\n      return parseCustomValue(value, NumberType);\n    case Date:\n      return parseCustomValue(value, function (value) {\n        return DateType(value, {\n          properties: options.properties\n        });\n      });\n    case Boolean:\n      return parseCustomValue(value, BooleanType);\n    default:\n      if (typeof type === 'function') {\n        return parseCustomValue(value, type);\n      }\n      throw new Error(\"Unsupported schema type: \".concat(type && type.name || type));\n  }\n}\nexport function getBlock(string, endCharacter, startIndex) {\n  var i = 0;\n  var substring = '';\n  var character;\n  while (startIndex + i < string.length) {\n    var _character = string[startIndex + i];\n    if (_character === endCharacter) {\n      return [substring, i];\n    } else if (_character === '\"') {\n      var block = getBlock(string, '\"', startIndex + i + 1);\n      substring += block[0];\n      i += '\"'.length + block[1] + '\"'.length;\n    } else {\n      substring += _character;\n      i++;\n    }\n  }\n  return [substring, i];\n}\n\n/**\r\n * Parses a string of comma-separated substrings into an array of substrings.\r\n * (the `export` is just for tests)\r\n * @param  {string} string — A string of comma-separated substrings.\r\n * @return {string[]} An array of substrings.\r\n */\nexport function parseArray(string, arrayValueSeparator) {\n  var blocks = [];\n  var index = 0;\n  while (index < string.length) {\n    var _getBlock = getBlock(string, arrayValueSeparator, index),\n      _getBlock2 = _slicedToArray(_getBlock, 2),\n      substring = _getBlock2[0],\n      length = _getBlock2[1];\n    index += length + arrayValueSeparator.length;\n    blocks.push(substring.trim());\n  }\n  return blocks;\n}\n\n// Transpose a 2D array.\n// https://stackoverflow.com/questions/17428587/transposing-a-2d-array-in-javascript\nvar transpose = function transpose(array) {\n  return array[0].map(function (_, i) {\n    return array.map(function (row) {\n      return row[i];\n    });\n  });\n};\nfunction validateSchema(schema) {\n  for (var _i3 = 0, _Object$keys2 = Object.keys(schema); _i3 < _Object$keys2.length; _i3++) {\n    var key = _Object$keys2[_i3];\n    var entry = schema[key];\n    if (!entry.prop) {\n      throw new Error(\"\\\"prop\\\" not defined for schema entry \\\"\".concat(key, \"\\\".\"));\n    }\n  }\n}\nfunction isEmptyValue(value) {\n  return value === undefined || value === null;\n}\n//# sourceMappingURL=convertToJson.js.map","import parseDate from '../read/parseDate.js';\nimport InvalidError from './InvalidError.js';\nexport default function DateType(value, _ref) {\n  var properties = _ref.properties;\n  // XLSX has no specific format for dates.\n  // Sometimes a date can be heuristically detected.\n  // https://github.com/catamphetamine/read-excel-file/issues/3#issuecomment-395770777\n  if (value instanceof Date) {\n    if (isNaN(value.valueOf())) {\n      throw new InvalidError('out_of_bounds');\n    }\n    return value;\n  }\n  if (typeof value === 'number') {\n    if (isNaN(value)) {\n      throw new InvalidError('invalid_number');\n    }\n    if (!isFinite(value)) {\n      throw new InvalidError('out_of_bounds');\n    }\n    var date = parseDate(value, properties);\n    if (isNaN(date.valueOf())) {\n      throw new InvalidError('out_of_bounds');\n    }\n    return date;\n  }\n  throw new InvalidError('not_a_date');\n}\n//# sourceMappingURL=Date.js.map","function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport convertToJson from './convertToJson.js';\nexport default function convertToJsonLegacyBehavior(data, schema) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var includeNullValues = options.includeNullValues,\n    ignoreEmptyRows = options.ignoreEmptyRows,\n    isColumnOriented = options.isColumnOriented,\n    rowMap = options.rowMap;\n  var defaultConversionOptions = {\n    schemaPropertyValueForMissingColumn: undefined,\n    schemaPropertyValueForUndefinedCellValue: undefined,\n    schemaPropertyValueForNullCellValue: undefined,\n    schemaPropertyShouldSkipRequiredValidationForMissingColumn: function schemaPropertyShouldSkipRequiredValidationForMissingColumn(column, _ref) {\n      var path = _ref.path;\n      return false;\n    },\n    getEmptyObjectValue: function getEmptyObjectValue(object, _ref2) {\n      var path = _ref2.path;\n      return path ? undefined : null;\n    },\n    getEmptyArrayValue: function getEmptyArrayValue() {\n      return null;\n    },\n    arrayValueSeparator: ','\n  };\n  if (includeNullValues) {\n    defaultConversionOptions.schemaPropertyValueForMissingColumn = null;\n    defaultConversionOptions.schemaPropertyValueForUndefinedCellValue = null;\n    defaultConversionOptions.schemaPropertyValueForNullCellValue = null;\n    defaultConversionOptions.getEmptyObjectValue = function (object, _ref3) {\n      var path = _ref3.path;\n      return null;\n    };\n  }\n  var result = convertToJson(data, schema, _objectSpread(_objectSpread({}, defaultConversionOptions), {}, {\n    rowIndexMap: rowMap,\n    isColumnOriented: isColumnOriented\n  }));\n  if (ignoreEmptyRows !== false) {\n    result.rows = result.rows.filter(function (_) {\n      return _ !== defaultConversionOptions.getEmptyObjectValue(_, {\n        path: undefined\n      });\n    });\n  }\n  return result;\n}\n//# sourceMappingURL=convertToJson.legacy.js.map","function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _excluded = [\"schemaPropertyValueForEmptyCell\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n// Renames some of the `react-excel-file` options to `convertToJson()` options.\nexport default function convertToJsonSpreadsheetBehavior(convertToJson, data, schema) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var schemaPropertyValueForEmptyCell = options.schemaPropertyValueForEmptyCell,\n    restOptions = _objectWithoutProperties(options, _excluded);\n  return convertToJson(data, schema, _objectSpread(_objectSpread({}, restOptions), {}, {\n    schemaPropertyValueForNullCellValue: schemaPropertyValueForEmptyCell\n  }));\n}\n//# sourceMappingURL=convertToJson.spreadsheet.js.map","function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nexport default function convertMapToSchema(map) {\n  var schema = {};\n  for (var _i = 0, _Object$keys = Object.keys(map); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var prop = map[key];\n    var type = void 0;\n    if (_typeof(prop) === 'object') {\n      prop = Object.keys(map[key])[0];\n      type = convertMapToSchema(map[key][prop]);\n    }\n    schema[key] = {\n      prop: prop\n    };\n    if (type) {\n      schema[key].type = type;\n    }\n  }\n  return schema;\n}\n//# sourceMappingURL=convertMapToSchema.js.map","function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _excluded = [\"schema\", \"map\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport readXlsx from './readXlsx.js';\nimport convertToJsonLegacyBehavior from './schema/convertToJson.legacy.js';\nimport convertToJsonSpreadsheetBehavior from './schema/convertToJson.spreadsheet.js';\nimport convertMapToSchema from './schema/convertMapToSchema.js';\nexport default function readXlsxFileContents(entries, xml, _ref) {\n  var schema = _ref.schema,\n    map = _ref.map,\n    options = _objectWithoutProperties(_ref, _excluded);\n  if (!schema && map) {\n    schema = convertMapToSchema(map);\n  }\n  // `readXlsx()` adds `options.rowMap`, if not passed.\n  var result = readXlsx(entries, xml, _objectSpread(_objectSpread({}, options), {}, {\n    properties: schema || options.properties\n  }));\n  if (schema) {\n    return convertToJsonSpreadsheetBehavior(convertToJsonLegacyBehavior, result.data, schema, _objectSpread(_objectSpread({}, options), {}, {\n      properties: result.properties\n    }));\n  }\n  return result;\n}\n//# sourceMappingURL=readXlsxFileContents.js.map","import xml from '../xml/xmlBrowser.js';\nimport unpackXlsxFile from './unpackXlsxFileBrowser.js';\nimport readXlsxFileContents from './readXlsxFileContents.js';\n\n/**\r\n * Reads XLSX file into a 2D array of cells in a browser.\r\n * @param  {file} file - A file being uploaded in the browser.\r\n * @param  {object?} options\r\n * @param  {(number|string)?} options.sheet - Excel document sheet to read. Defaults to `1`. Will only read this sheet and skip others.\r\n * @return {Promise} Resolves to a 2D array of cells: an array of rows, each row being an array of cells.\r\n */\nexport default function readXlsxFile(file) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return unpackXlsxFile(file).then(function (entries) {\n    return readXlsxFileContents(entries, xml, options);\n  });\n}\n//# sourceMappingURL=readXlsxFileBrowser.js.map"],"names":["xml","createDocument","content","DOMParser","parseFromString","trim","u8","Uint8Array","u16","Uint16Array","u32","Uint32Array","fleb","fdeb","clim","freb","eb","start","b","i","r","j","_a","fl","revfl","fd","rev","x","hMap","cd","mb","s","length","l","co","le","rvb","sv","r_1","v","m","flt","fdt","flrm","fdrm","max","a","bits","d","p","o","bits16","slc","e","n","BYTES_PER_ELEMENT","set","subarray","ec","err","ind","msg","nt","Error","code","captureStackTrace","inflt","dat","buf","st","sl","f","noBuf","noSt","cbuf","bl","nbuf","Math","final","pos","bt","lm","dm","lbt","dbt","tbts","type","t","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","c","lt","dt","lms","dms","lpos","sym","add","dsym","end","et","b2","b4","b8","inflateSync","data","out","td","TextDecoder","decode","stream","dutf8","String","fromCharCode","strFromU8","latin1","apply","slzh","zh","z","fnl","fn","es","bs","z64e","sc","su","off","unpackXlsxArrayBuffer","arrayBuffer","contents","opts","files","ze","fltr","filter","c_2","no","name","size","originalSize","compression","unzipSync","Promise","resolve","unzippedFiles","_i","_Object$keys","Object","keys","key","getContents","findChild","node","tagName","childNodes","childNode","nodeType","getTagName","findChildren","results","push","forEach","func","NAMESPACE_REG_EXP","element","replace","getOuterXml","textContent","attributes","value","getSharedStrings","document","sst","documentElement","string","parseProperties","book","properties","workbookProperties","getAttribute","epoch1904","sheets","getSheets","sheet","id","relationId","parseFilePaths","filePaths","sharedStrings","undefined","styles","getRelationships","relationship","filePath","getFilePath","path","slice","_typeof","Symbol","iterator","constructor","prototype","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","enumerable","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","arg","input","hint","prim","toPrimitive","res","call","TypeError","Number","_toPrimitive","_toPropertyKey","configurable","writable","parseStyles","cellStyleXfs","doc","baseStyles","map","parseCellStyle","numberFormats","numFmts","getNumberFormats","parseNumberFormatStyle","reduce","formats","format","cellXfs","getCellStyles","xf","hasAttribute","xfId","numFmt","template","style","numberFormatId","numberFormat","parseExcelDate","excelSerialDate","options","Date","round","_createForOfIteratorHelperLoose","allowArrayLike","it","next","bind","Array","isArray","minLen","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","done","arr","len","arr2","isDateTimestamp","styleId","concat","BUILT_IN_DATE_NUMBER_FORMAT_IDS","indexOf","dateFormat","smartDateParser","_step","_iterator","toLowerCase","DATE_FORMAT_WEIRD_PREFIX","DATE_FORMAT_WEIRD_POSTFIX","split","token","DATE_TEMPLATE_TOKENS","isDateTemplate","parseCellValue","_ref","getInlineStringValue","getInlineStringXml","getStyleId","values","parseString","sharedStringIndex","isNaN","errorCode","decodeError","parsedDate","valueOf","parseDate","parseNumberDefault","parseNumber","stringifiedNumber","parsedNumber","LETTERS","columnLettersToNumber","columnLetters","parseCellCoordinates","coords","parseInt","parseCell","valueElement","getCellValue","row","column","firstChild","getCellInlineStringValue","parseCells","cells","sheetData","cell","getCells","_slicedToArray","_arrayWithHoles","u","_iterableToArrayLimit","_nonIterableRest","parseDimensions","dimensions","getDimensions","_ref2","getData","_dimensions","rightBottom","colsCount","rowsCount","rowIndex","columnIndex","rowIndexMap","rowMap","_ref$accessor","accessor","_","onlyTrimAtTheEnd","empty","splice","dropEmptyRows","dropEmptyColumns","transformData","readXlsx","getXmlFileContent","parseSharedStrings","sheetId","_sheet","_sheet2","getSheetId","sheetsList","join","createSheetNotFoundError","comparator","allRows","sort","allCols","minRow","maxRow","calculateDimensions","parseSheet","_defineProperties","target","props","descriptor","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","this","Reflect","construct","self","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_wrapNativeSuper","Class","_cache","Map","Function","has","get","Wrapper","_construct","create","_setPrototypeOf","Parent","args","instance","sham","Proxy","Boolean","setPrototypeOf","__proto__","getPrototypeOf","InvalidError","_Error","subClass","superClass","_inherits","Constructor","protoProps","staticProps","_super","reason","_this","_classCallCheck","NumberType","stringifiedValue","isFinite","StringType","BooleanType","DEFAULT_OPTIONS","schemaPropertyValueForMissingColumn","schemaPropertyValueForUndefinedCellValue","schemaPropertyValueForNullCellValue","schemaPropertyShouldSkipRequiredValidationForMissingColumn","getEmptyObjectValue","getEmptyArrayValue","isColumnOriented","arrayValueSeparator","convertToJson","schema","_options","_i3","_Object$keys2","prop","validateSchema","transpose","columns","errors","read","error","rows","object","isEmptyObject","createError","errorMessage","pendingRequiredChecks","_loop","cellValue","schemaEntry","isNestedSchema","propertyPath","isMissingColumn","array","blocks","index","_getBlock2","getBlock","substring","parseArray","_value","parseValue","isEmpty","every","isEmptyValue","required","_i2","_pendingRequiredCheck","_pendingRequiredCheck2","parse","parseCustomValue","date","DateType","parseValueOfType","oneOf","validate","message","endCharacter","startIndex","_character","block","convertToJsonLegacyBehavior","includeNullValues","ignoreEmptyRows","defaultConversionOptions","_ref3","_excluded","_objectWithoutProperties","source","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","convertMapToSchema","readXlsxFileContents","entries","schemaPropertyValueForEmptyCell","convertToJsonSpreadsheetBehavior","file","File","Blob","then"],"mappings":"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"}